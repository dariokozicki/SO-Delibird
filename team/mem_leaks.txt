==7775== Memcheck, a memory error detector
==7775== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==7775== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==7775== Command: ./team
==7775== Parent PID: 7773
==7775== 
==7775== Thread 5:
==7775== Invalid read of size 4
==7775==    at 0x4030ED0: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==7775==    by 0x804EF80: serializar_paquete (common_connections.c:138)
==7775==    by 0x804F55D: send_new_connection (common_connections.c:265)
==7775==    by 0x804A523: connection_broker_suscribe_to_appeared_pokemon (suscripcion.c:20)
==7775==    by 0x804A49A: connection_broker_global_suscribe (suscripcion.c:6)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775==  Address 0x424d730 is 0 bytes after a block of size 0 alloc'd
==7775==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==7775==    by 0x804E440: new_connection_to_stream (common_utils.c:301)
==7775==    by 0x804F53B: send_new_connection (common_connections.c:261)
==7775==    by 0x804A523: connection_broker_suscribe_to_appeared_pokemon (suscripcion.c:20)
==7775==    by 0x804A49A: connection_broker_global_suscribe (suscripcion.c:6)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775== 
==7775== Invalid read of size 4
==7775==    at 0x4030ED0: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==7775==    by 0x804EF80: serializar_paquete (common_connections.c:138)
==7775==    by 0x804F55D: send_new_connection (common_connections.c:265)
==7775==    by 0x804A596: connection_broker_suscribe_to_caught_pokemon (suscripcion.c:29)
==7775==    by 0x804A4A7: connection_broker_global_suscribe (suscripcion.c:7)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775==  Address 0x424fa68 is 0 bytes after a block of size 0 alloc'd
==7775==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==7775==    by 0x804E440: new_connection_to_stream (common_utils.c:301)
==7775==    by 0x804F53B: send_new_connection (common_connections.c:261)
==7775==    by 0x804A596: connection_broker_suscribe_to_caught_pokemon (suscripcion.c:29)
==7775==    by 0x804A4A7: connection_broker_global_suscribe (suscripcion.c:7)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775== 
==7775== Invalid read of size 4
==7775==    at 0x4030ED0: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==7775==    by 0x804EF80: serializar_paquete (common_connections.c:138)
==7775==    by 0x804F55D: send_new_connection (common_connections.c:265)
==7775==    by 0x804A609: connection_broker_suscribe_to_localized_pokemon (suscripcion.c:38)
==7775==    by 0x804A4B4: connection_broker_global_suscribe (suscripcion.c:8)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775==  Address 0x4251650 is 0 bytes after a block of size 0 alloc'd
==7775==    at 0x402C17C: malloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==7775==    by 0x804E440: new_connection_to_stream (common_utils.c:301)
==7775==    by 0x804F53B: send_new_connection (common_connections.c:261)
==7775==    by 0x804A609: connection_broker_suscribe_to_localized_pokemon (suscripcion.c:38)
==7775==    by 0x804A4B4: connection_broker_global_suscribe (suscripcion.c:8)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775== 
==7775== Thread 10:
==7775== Conditional jump or move depends on uninitialised value(s)
==7775==    at 0x804B4C9: processCaughtPokemon (suscripcion.c:342)
==7775==    by 0x804ACF9: reception_message_queue_subscription (suscripcion.c:184)
==7775==    by 0x804EE1F: serve_client (common_connections.c:106)
==7775==    by 0x804A95F: connect_client (suscripcion.c:125)
==7775==    by 0x804A81D: suscribeOnThreadList (suscripcion.c:81)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775== 
==7775== 
==7775== HEAP SUMMARY:
==7775==     in use at exit: 272 bytes in 2 blocks
==7775==   total heap usage: 4,571 allocs, 4,569 frees, 179,437 bytes allocated
==7775== 
==7775== Thread 1:
==7775== 136 bytes in 1 blocks are possibly lost in loss record 1 of 2
==7775==    at 0x402E0B8: calloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==7775==    by 0x4011726: allocate_dtv (dl-tls.c:322)
==7775==    by 0x401214B: _dl_allocate_tls (dl-tls.c:539)
==7775==    by 0x4061CC3: allocate_stack (allocatestack.c:588)
==7775==    by 0x4061CC3: pthread_create@@GLIBC_2.1 (pthread_create.c:539)
==7775==    by 0x804A5D7: connection_broker_suscribe_to_caught_pokemon (suscripcion.c:33)
==7775==    by 0x804A4A7: connection_broker_global_suscribe (suscripcion.c:7)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775== 
==7775== 136 bytes in 1 blocks are possibly lost in loss record 2 of 2
==7775==    at 0x402E0B8: calloc (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==7775==    by 0x4011726: allocate_dtv (dl-tls.c:322)
==7775==    by 0x401214B: _dl_allocate_tls (dl-tls.c:539)
==7775==    by 0x4061CC3: allocate_stack (allocatestack.c:588)
==7775==    by 0x4061CC3: pthread_create@@GLIBC_2.1 (pthread_create.c:539)
==7775==    by 0x804A64A: connection_broker_suscribe_to_localized_pokemon (suscripcion.c:42)
==7775==    by 0x804A4B4: connection_broker_global_suscribe (suscripcion.c:8)
==7775==    by 0x4061294: start_thread (pthread_create.c:333)
==7775==    by 0x41700AD: clone (clone.S:114)
==7775== 
==7775== LEAK SUMMARY:
==7775==    definitely lost: 0 bytes in 0 blocks
==7775==    indirectly lost: 0 bytes in 0 blocks
==7775==      possibly lost: 272 bytes in 2 blocks
==7775==    still reachable: 0 bytes in 0 blocks
==7775==         suppressed: 0 bytes in 0 blocks
==7775== 
==7775== For counts of detected and suppressed errors, rerun with: -v
==7775== Use --track-origins=yes to see where uninitialised values come from
==7775== ERROR SUMMARY: 12 errors from 6 contexts (suppressed: 0 from 0)
